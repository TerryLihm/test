学习计划：flask框架、SQL+MySQL、html+css+javascript、vue、axios
1.遇到问题：个人使用了阿里云的服务器来部署智能计算平台项目，由于该服务器为CentOS系统且没有图形化界面，所以在我尝试运行vue项目时无法通过https://localhost:8000访问页面

解决方案：用本地机通过ssh远程登陆服务器并完成端口映射如下
ssh root@121.199.26.170 -L127.0.0.1:8893:127.0.0.1:8080
最终成功解决该问题。


2.了解了客户端、服务器端的工作原理。
首先是各个组成部分：浏览器、Nginx（对外Web服务器）、uWSGI（对内Web服务器）、Flask。浏览器作为前端，与Nginx以HTTP协议传输请求与响应；Nginx与uWSGI之间通过socket交流；uWSGI通过WSGI接口与后端Flask框架对接


3.为什么要使用url_for?以及它的原理？
与传统的URL以路由为标记不同，url_for将函数名称作为第一个参数，旨在以函数名称作为索引，方便更改路由时仍然能够有效调用函数。url_for可以接受任意个关键字参数，每个关键字参数对应URL中的变量。未知变量则添加到URL中作为查询参数。
且使用url_for有以下优点：（1）反转通常比硬编码 URL 的描述性更好。（2）可以只在一个地方改变 URL，而不用到处乱找。（3）URL 创建会为您处理特殊字符的转义，比较直观。（4）生产的路径总是绝对路径，可以避免相对路径产生副作用。（5）如果您的应用是放在 URL 根路径之外的地方（如在 /myapplication 中，不在 / 中）， url_for() 会为您妥善处理。


4.上下文的理解：上下文类似于一个容器，保存了	Flask程序运行过程中的一些信息。
上下文分为请求上下文和应用上下文。